// <auto-generated />
using System;
using AYS_DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AYS_DAL.Migrations
{
    [DbContext(typeof(DB_AYSContext))]
    [Migration("20241027144711_seed_data_düzeltme")]
    partial class seed_data_düzeltme
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AYS_DAL.Entities.Concrete.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 10, 10, 11, 43, 33, 234, DateTimeKind.Local).AddTicks(5286),
                            IsActive = true,
                            Name = "Göksel",
                            Password = "EF92B778BAFE771E89245B89ECBC08A44A4E166C06659911881F383D4473E94F"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 10, 10, 11, 43, 33, 234, DateTimeKind.Local).AddTicks(5286),
                            IsActive = true,
                            Name = "Minel",
                            Password = "EF92B778BAFE771E89245B89ECBC08A44A4E166C06659911881F383D4473E94F"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 10, 10, 11, 43, 33, 234, DateTimeKind.Local).AddTicks(5286),
                            IsActive = true,
                            Name = "Efnan",
                            Password = "EF92B778BAFE771E89245B89ECBC08A44A4E166C06659911881F383D4473E94F"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2024, 10, 10, 11, 43, 33, 234, DateTimeKind.Local).AddTicks(5286),
                            IsActive = true,
                            Name = "Mustafa",
                            Password = "EF92B778BAFE771E89245B89ECBC08A44A4E166C06659911881F383D4473E94F"
                        });
                });

            modelBuilder.Entity("AYS_DAL.Entities.Concrete.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Artist = "Serdar Ortaç",
                            Created = new DateTime(2024, 10, 10, 11, 43, 33, 234, DateTimeKind.Local).AddTicks(5286),
                            Discount = 0m,
                            IsActive = false,
                            Name = "Mesafe",
                            Price = 55m,
                            ReleaseDate = new DateOnly(2006, 1, 5),
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            Artist = "Teoman",
                            Created = new DateTime(2024, 10, 10, 11, 43, 33, 234, DateTimeKind.Local).AddTicks(5286),
                            Discount = 0.10m,
                            IsActive = false,
                            Name = "onyedi",
                            Price = 975m,
                            ReleaseDate = new DateOnly(2000, 4, 28),
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            Artist = "Eurythmics",
                            Created = new DateTime(2024, 10, 10, 11, 43, 33, 234, DateTimeKind.Local).AddTicks(5286),
                            Discount = 0.2m,
                            IsActive = false,
                            Name = "Touch",
                            Price = 450m,
                            ReleaseDate = new DateOnly(1983, 1, 1),
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            Artist = "Kayahan",
                            Created = new DateTime(2024, 10, 10, 11, 43, 33, 234, DateTimeKind.Local).AddTicks(5286),
                            Discount = 0m,
                            IsActive = false,
                            Name = "Gönül Sayfam",
                            Price = 975m,
                            ReleaseDate = new DateOnly(2000, 1, 1),
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            Artist = "Yüzyüzeyken Konuşuruz",
                            Created = new DateTime(2024, 10, 10, 11, 43, 33, 234, DateTimeKind.Local).AddTicks(5286),
                            Discount = 0m,
                            IsActive = false,
                            Name = "Akustik Travma",
                            Price = 975m,
                            ReleaseDate = new DateOnly(2018, 1, 1),
                            Status = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
